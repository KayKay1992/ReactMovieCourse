Implement thriller video

Here's how to add a video trailer section to your MovieDetails component using the TMDB API:

1. First, Add Trailer Fetching Logic
jsx
Copy
const [trailerKey, setTrailerKey] = useState(null);
const [isTrailerLoading, setIsTrailerLoading] = useState(false);

const fetchTrailer = async (movieId) => {
  setIsTrailerLoading(true);
  try {
    const response = await fetch(
      `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${import.meta.env.VITE_TMDB_API_KEY}`
    );
    const data = await response.json();
    const trailer = data.results.find(
      (video) => video.type === "Trailer" && video.site === "YouTube"
    );
    setTrailerKey(trailer?.key);
  } catch (error) {
    console.error("Error fetching trailer:", error);
  } finally {
    setIsTrailerLoading(false);
  }
};

useEffect(() => {
  if (id) {
    fetchTrailer(id);
  }
}, [id]);
2. Add the Trailer Section to Your JSX
jsx
Copy
return (
  <div className="movie-details">
    {/* ... your existing code ... */}
    
    {/* Trailer Section */}
    <section className="trailer-section">
      <h2>Trailer</h2>
      {isTrailerLoading ? (
        <div className="spinner"></div>
      ) : trailerKey ? (
        <div className="video-container">
          <iframe
            width="100%"
            height="500"
            src={`https://www.youtube.com/embed/${trailerKey}`}
            title={`${movieDetails.title} Trailer`}
            frameBorder="0"
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
            allowFullScreen
          ></iframe>
        </div>
      ) : (
        <p>No trailer available</p>
      )}
    </section>
  </div>
);
3. Add CSS Styling
css
Copy
/* Add to MovieDetails.css */
.trailer-section {
  margin: 3rem 0;
  padding: 0 1rem;
}

.video-container {
  position: relative;
  padding-bottom: 56.25%; /* 16:9 aspect ratio */
  height: 0;
  overflow: hidden;
  margin-top: 1rem;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.video-container iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: none;
}
Key Features:
Automatically Finds the Best Trailer:

Filters for YouTube trailers specifically

Falls back to "No trailer available" message

Responsive Design:

16:9 aspect ratio maintained on all screens

Mobile-friendly with proper padding

Loading States:

Shows spinner while fetching

Handles errors gracefully