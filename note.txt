Adding Pagination 

To implement pagination for the movie list in your code, you’ll need to adjust your API calls so that you can load more movies in chunks (or pages) rather than loading all movies at once. Typically, this is done by adding a page parameter to the API request and adjusting the state for the current page and total pages.

Here’s a step-by-step implementation:

1. Add State for Pagination:
Track the current page.

Track the total number of pages (if the API provides this information).

Track whether there are more pages to load.

2. Modify the API call to include pagination:
Use the page parameter in the API request to fetch different pages of results.

3. Add Next and Previous Buttons:
Provide buttons for users to navigate between pages.

Key Changes:
Pagination State:

currentPage: Tracks the current page.

totalPages: Tracks the total number of pages (from API).

moviesPerPage: Fixed number of movies per page (can be adjusted).

API Endpoint:

Modified to include page=${page} in both the search and popular movie queries to handle pagination.

Pagination Controls:

Added "Previous" and "Next" buttons for users to navigate between pages.

Disabled buttons when on the first or last page.

Page Handling Logic:

handlePageChange function to change pages based on button clicks.

Summary:
With these changes, your app will now support pagination when displaying search results or popular movies, and users can navigate between pages using "Previous" and "Next" buttons.