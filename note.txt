Implementing search functionality

Key Updates:
fetchMovies function:

The function now takes query (search term) as an argument. It checks if a search term is provided and constructs the appropriate URL to either fetch search results or popular movies.

I added a check to display a message when no movies are found after a search, and I made sure that the API properly handles empty results.

Handling Search Term:

The useEffect hook is triggered every time the searchTerm changes, and it calls fetchMovies with the updated search term.

When the search term is empty (i.e., no search term), the app will fetch popular movies by default.

Spinner and Error Handling:

I added a loading spinner (Spinner) when data is being fetched, and an error message will be shown if the request fails or there are no results.

How it Works:
Initial Load: When the app loads for the first time, it will fetch popular movies by default.

Search: When a user types a query into the search bar and submits, the searchTerm state will update, and the useEffect hook will fetch the search results.

Error Handling: If no results are found, an appropriate message will be shown, and if there is an error, it will be displayed.

Things to Keep in Mind:
Ensure the API_KEY is valid and accessible through the environment variable.

The Search component should update the searchTerm correctly when the user types something into the search bar. If you need help with the Search component, feel free to ask!